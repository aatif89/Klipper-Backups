gcode_macros:
  CHAMBER_TEMP_CONTROL:
    gcode:
      - |
        {% set target_bed = params.BED|default("115")|int %}
        {% set target_chamber = params.CHAMBER|default("50")|int %}
        {% set min_heatbed_temp = target_bed %}
        {% set min_chamber_temp = target_chamber %}
        {% set threshold = printer["gcode_macro _BEDFANVARS"].variable_threshold|int %}
        {% set innerfast = printer["gcode_macro _BEDFANVARS"].variable_innerfast|float %}
        {% set outerfast = printer["gcode_macro _BEDFANVARS"].variable_outerfast|float %}
        {% set innerslow = printer["gcode_macro _BEDFANVARS"].variable_innerslow|float %}
        {% set outerslow = printer["gcode_macro _BEDFANVARS"].variable_outerslow|float %}
        {% set min_speed = 0 %}
        {% set max_speed = 200 %}  # Maximum fan speed (adjust as needed)
        {% set stabilization_time = 10 * 60 %}  # 10 minutes in seconds

        SET_CHAMBER_TEMPERATURE_SWITCH THRESHOLD={{ target_chamber }}
        SET_CHAMBER_TEMPERATURE_HYSTERESIS HYSTERESIS=1

        {% set fan_speed = 0 %}
        {% if printer['bed_temperature'] > threshold %}
          {% if printer['bed_temperature'] >= target_bed %}
            {% if printer['bed_heater'].time_held >= stabilization_time %}
              {% set fan_speed = max_speed %}
            {% endif %}
          {% endif %}
        {% endif %}

        {% set temp_difference = printer['chamber_temperature'] - target_chamber %}
        {% if temp_difference < 0 %}
          {% if printer['bed_temperature'] > threshold %}
            {% set fan_speed = max(min_speed, min_speed + (temp_difference * (outerfast - innerslow))) %}
          {% else %}
            {% set fan_speed = max(min_speed, min_speed + (temp_difference * (outerfast - innerslow))) %}
          {% endif %}
        {% endif %}

        {% if printer['bed_temperature'] < min_heatbed_temp %}
          {% set fan_speed = max_speed %}
        {% endif %}

      - M106 S{{ fan_speed }} ; Set fan speed for chamber (and bed)
      - DISPLAY Message="Chamber temperature control activated."

  _BEDFANVARS:
    variable_threshold: 100        # If bed temp target is above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
    variable_innerfast: 0.5        # Fan speed once bed temp is reached
    variable_outerfast: 0.6
    variable_innerslow: 0.2        # Fan speed while bed is heating
    variable_outerslow: 0.2

########## Bed Fans #########

[fan_generic BedInner]
pin: PD13
#cycle_time: 0.05
kick_start_time: 0.5

[fan_generic BedOuter]
pin: PD14
#cycle_time: 0.05
kick_start_time: 0.5

  BEDFANSSLOW:
    gcode:
      - |
        {% set INNERSLOW = printer["gcode_macro _BEDFANVARS"].innerslow|float %}
        {% set OUTERSLOW = printer["gcode_macro _BEDFANVARS"].outerslow|float %}
        
        SET_FAN_SPEED FAN=BedInner SPEED={INNERSLOW}
        SET_FAN_SPEED FAN=BedOuter SPEED={OUTERSLOW}
        DISPLAY Message="Bed fans set to slow speed."

  BEDFANSFAST:
    gcode:
      - |
        {% set INNERFAST = printer["gcode_macro _BEDFANVARS"].innerfast|float %}
        {% set OUTERFAST = printer["gcode_macro _BEDFANVARS"].outerfast|float %}
        
        SET_FAN_SPEED FAN=BedInner SPEED={INNERFAST}
        SET_FAN_SPEED FAN=BedOuter SPEED={OUTERFAST}
        DISPLAY Message="Bed fans set to fast speed."

  BEDFANSOFF:
    gcode:
      - SET_FAN_SPEED FAN=BedInner SPEED=0
      - SET_FAN_SPEED FAN=BedOuter SPEED=0
      - DISPLAY Message="Bed fans turned off."

  SET_HEATER_TEMPERATURE:
    rename_existing: _SET_HEATER_TEMPERATURE
    gcode:
      - |
        {% set HEATER = params.HEATER|default("None") %}
        {% set TARGET = params.TARGET|default(0)|int %}
        {% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
        
        {% if HEATER|lower == "extruder" %}
            M104 S{TARGET}
        {% elif HEATER|lower == "heater_bed" %}
            M99140 S{TARGET}
        {% else %}
            {action_respond_info("Heater %s not supported" % HEATER)}
        {% endif %}
  
        {% if HEATER|lower == "heater_bed" %}
            {% if TARGET >= THRESHOLD %}
                BEDFANSSLOW
                UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1
            {% else %}
                BEDFANSOFF
                UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0
            {% endif %}
        {% endif %}
        DISPLAY Message="Heater temperature set."

  M190:
    rename_existing: M99190
    gcode:
      - |
        {% set S = params.S|int %}
        {% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
        
        {% if S >= THRESHOLD %}
            BEDFANSSLOW
        {% else %}
            BEDFANSOFF
        {% endif %}

        M140 {% for p in params
          %}{'%s%s' % (p, params[p])}{%
          endfor %}                                                                  
          
        {% if S != 0 %}
            TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}
        {% endif %}
  
        {% if S >= THRESHOLD %}								    
            BEDFANSFAST
        {% endif %}
        DISPLAY Message="Waiting for bed temperature."

  M140:
    rename_existing: M99140
    gcode:
      - |
        {% set S = params.S|float %}
        
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
        DISPLAY Message="Bed temperature set."

  TURN_OFF_HEATERS:
    rename_existing: _TURN_OFF_HEATERS
    gcode:
      - BEDFANSOFF
      - _TURN_OFF_HEATERS
      - DISPLAY Message="Heaters turned off."

delayed_gcode:
  bedfanloop:
    gcode:
      - |
        {% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
        
        {% if printer.heater_bed.target >= THRESHOLD %}
            {% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
                BEDFANSFAST
            {% else %}
                UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5
            {% endif %}
        {% endif %}
        DISPLAY Message="Bed fan loop updated."
